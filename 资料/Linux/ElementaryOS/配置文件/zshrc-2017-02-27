# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# oh-my-zsh的安装路径
export ZSH=/home/alic/.oh-my-zsh

# 主题设置
ZSH_THEME="robbyrussell"

# 大小写是否敏感
CASE_SENSITIVE="false"

# 连字符敏感
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# zsh是否自动不更新
DISABLE_AUTO_UPDATE="true"

# zsh自动更新的时间周期(天)
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# 用户基本配置
# export MANPATH="/usr/local/man:$MANPATH"

# 语言环境
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#


# 自定义命令别名
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
# 系统相关
alias aptin='sudo apt-get install'
alias aptre='sudo apt-get autoremove'
alias ud='sudo apt-get update'
alias pc="proxychains4"

# 蝴蝶
alias eth0='/home/alic/Shell/Extra/butterfly/eth0.sh'
alias wlan0='/home/alic/Shell/Extra/butterfly/wlan0.sh'

# 更新host
alias uphost='sudo /home/alic/Shell/Extra/hosts/hosts.sh'

# apache2操作
alias staa='sudo service apache2 start'
alias stoa='sudo service apache2 stop'
alias resa='sudo service apache2 restart'

#lnmp
alias lnmp='sudo /home/alic/tutorial/Github/Alic_env/localhost/lnmp.sh'
# ssh
alias sshserver='ssh -i /home/alic/tutorial/Github/Alic_env/Alic/Shell/Extra/server/.119.29.88.222 ubuntu@samego.com'
alias sshpi='ssh pi@172.16.168.115'
alias sshgs='ssh root@103.231.69.85 -p 9508'
alias sshs='/home/alic/tutorial/Coding/alic/公司/server/sshserver.sh'

#docker
# 杀死所有正在运行的容器.
alias dkillc='docker kill -f $(docker ps -a -q)'
# 删除所有已经停止的容器.
alias dcleanc='docker rm -f $(docker ps -a -q)'
# 删除所有未打标签的镜像.
alias dcleani='docker rmi $(docker images -q -f dangling=true)'
# 删除所有已经停止的容器和未打标签的镜像.
alias dockerclean='dockercleanc || true && dockercleani'
alias dpath='cd /home/alic/tutorial/Github/Alic_env/docker/docker-compose/'
alias dk='docker'
alias dc='docker-compose'
alias dc-start='/home/alic/tutorial/Github/Alic_env/docker/docker-compose/alias/start.sh'
alias dc-stop='/home/alic/tutorial/Github/Alic_env/docker/docker-compose/alias/stop.sh'
alias reproxy='/home/alic/tutorial/Github/Alic_env/docker/SSR/reproxy.sh'
#alias wangyi='nohup ssh -p 8001 -ND 172.16.168.128:10001 root@localhost > /dev/null 2>&1 &'
alias wangyis='/home/alic/tutorial/Github/Alic_env/docker/SSR/wangyi.sh &'

# shell
alias shells='sudo chmod +x /home/alic/tutorial/Github/Alic_env/Alic/Shell/run.sh && sudo /home/alic/tutorial/Github/Alic_env/Alic/Shell/run.sh'

#代理
#export http_proxy="http://172.16.168.128:10001"
#export https_proxy=http://127.0.0.1:8118/
